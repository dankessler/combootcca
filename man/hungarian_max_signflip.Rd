% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/funcs.R
\name{hungarian_max_signflip}
\alias{hungarian_max_signflip}
\title{Solve the Hungarian Algorithm (maximizing assignment) but with Sign
Flipping Allowed}
\usage{
hungarian_max_signflip(C)
}
\arguments{
\item{C}{k1 x k2 matrix of assignment costs.}
}
\value{
Square matrix with k2^2 elements; composition of permutation and
sign flipping matrix.
}
\description{
Solve a more generalized version of the Hungarian Algorithm.
}
\details{
The classic Hungarian Algorithm solves P = argmin_P trace(C * P), where P is
constrained to be a permutation matrix. Here, we instead solve T = argmax_T
trace(C * T), where T is the composition of a column-permutation matrix and
a column-wise sign-flipping matrix. Note that this differs from the classic
Hungarian algorithm in that we (1) maximize the utility of the assignments,
(2) are allowed to flip the sign of any of our utility values.
}
\author{
Dan Kessler
}
